// Mocks generated by Mockito 5.4.4 from annotations
// in madres_digitales_flutter_new/test/features/contenido/domain/usecases/get_contenidos_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:madres_digitales_flutter_new/features/contenido/domain/entities/categoria.dart'
    as _i5;
import 'package:madres_digitales_flutter_new/features/contenido/domain/entities/contenido.dart'
    as _i2;
import 'package:madres_digitales_flutter_new/features/contenido/domain/repositories/contenido_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeContenido_0 extends _i1.SmartFake implements _i2.Contenido {
  _FakeContenido_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContenidoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContenidoRepository extends _i1.Mock
    implements _i3.ContenidoRepository {
  MockContenidoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Contenido>> getContenidos({
    _i2.CategoriaContenido? categoria,
    _i2.TipoContenido? tipo,
    _i2.NivelDificultad? nivel,
    int? page = 1,
    int? limit = 20,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContenidos,
          [],
          {
            #categoria: categoria,
            #tipo: tipo,
            #nivel: nivel,
            #page: page,
            #limit: limit,
            #forceRefresh: forceRefresh,
          },
        ),
        returnValue: _i4.Future<List<_i2.Contenido>>.value(<_i2.Contenido>[]),
      ) as _i4.Future<List<_i2.Contenido>>);

  @override
  _i4.Future<_i2.Contenido?> getContenidoById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContenidoById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Contenido?>.value(),
      ) as _i4.Future<_i2.Contenido?>);

  @override
  _i4.Future<_i2.Contenido> createContenido({
    required String? titulo,
    required String? descripcion,
    required _i2.CategoriaContenido? categoria,
    required _i2.TipoContenido? tipo,
    String? url,
    String? thumbnailUrl,
    int? duracion,
    _i2.NivelDificultad? nivel = _i2.NivelDificultad.basico,
    List<String>? etiquetas = const [],
    int? semanaGestacionInicio,
    int? semanaGestacionFin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContenido,
          [],
          {
            #titulo: titulo,
            #descripcion: descripcion,
            #categoria: categoria,
            #tipo: tipo,
            #url: url,
            #thumbnailUrl: thumbnailUrl,
            #duracion: duracion,
            #nivel: nivel,
            #etiquetas: etiquetas,
            #semanaGestacionInicio: semanaGestacionInicio,
            #semanaGestacionFin: semanaGestacionFin,
          },
        ),
        returnValue: _i4.Future<_i2.Contenido>.value(_FakeContenido_0(
          this,
          Invocation.method(
            #createContenido,
            [],
            {
              #titulo: titulo,
              #descripcion: descripcion,
              #categoria: categoria,
              #tipo: tipo,
              #url: url,
              #thumbnailUrl: thumbnailUrl,
              #duracion: duracion,
              #nivel: nivel,
              #etiquetas: etiquetas,
              #semanaGestacionInicio: semanaGestacionInicio,
              #semanaGestacionFin: semanaGestacionFin,
            },
          ),
        )),
      ) as _i4.Future<_i2.Contenido>);

  @override
  _i4.Future<_i2.Contenido> updateContenido(
    String? id, {
    String? titulo,
    String? descripcion,
    _i2.CategoriaContenido? categoria,
    _i2.TipoContenido? tipo,
    String? url,
    String? thumbnailUrl,
    int? duracion,
    _i2.NivelDificultad? nivel,
    List<String>? etiquetas,
    int? semanaGestacionInicio,
    int? semanaGestacionFin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContenido,
          [id],
          {
            #titulo: titulo,
            #descripcion: descripcion,
            #categoria: categoria,
            #tipo: tipo,
            #url: url,
            #thumbnailUrl: thumbnailUrl,
            #duracion: duracion,
            #nivel: nivel,
            #etiquetas: etiquetas,
            #semanaGestacionInicio: semanaGestacionInicio,
            #semanaGestacionFin: semanaGestacionFin,
          },
        ),
        returnValue: _i4.Future<_i2.Contenido>.value(_FakeContenido_0(
          this,
          Invocation.method(
            #updateContenido,
            [id],
            {
              #titulo: titulo,
              #descripcion: descripcion,
              #categoria: categoria,
              #tipo: tipo,
              #url: url,
              #thumbnailUrl: thumbnailUrl,
              #duracion: duracion,
              #nivel: nivel,
              #etiquetas: etiquetas,
              #semanaGestacionInicio: semanaGestacionInicio,
              #semanaGestacionFin: semanaGestacionFin,
            },
          ),
        )),
      ) as _i4.Future<_i2.Contenido>);

  @override
  _i4.Future<void> deleteContenido(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteContenido,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.Contenido>> searchContenidos(
    String? query, {
    _i2.CategoriaContenido? categoria,
    _i2.TipoContenido? tipo,
    _i2.NivelDificultad? nivel,
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchContenidos,
          [query],
          {
            #categoria: categoria,
            #tipo: tipo,
            #nivel: nivel,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<List<_i2.Contenido>>.value(<_i2.Contenido>[]),
      ) as _i4.Future<List<_i2.Contenido>>);

  @override
  _i4.Future<void> toggleFavorito(String? contenidoId) => (super.noSuchMethod(
        Invocation.method(
          #toggleFavorito,
          [contenidoId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> registrarVista(String? contenidoId) => (super.noSuchMethod(
        Invocation.method(
          #registrarVista,
          [contenidoId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> actualizarProgreso(
    String? contenidoId, {
    int? tiempoVisualizado,
    double? porcentaje,
    bool? completado,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #actualizarProgreso,
          [contenidoId],
          {
            #tiempoVisualizado: tiempoVisualizado,
            #porcentaje: porcentaje,
            #completado: completado,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.Contenido>> getFavoritos(String? usuarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoritos,
          [usuarioId],
        ),
        returnValue: _i4.Future<List<_i2.Contenido>>.value(<_i2.Contenido>[]),
      ) as _i4.Future<List<_i2.Contenido>>);

  @override
  _i4.Future<List<_i2.Contenido>> getContenidosConProgreso(String? usuarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContenidosConProgreso,
          [usuarioId],
        ),
        returnValue: _i4.Future<List<_i2.Contenido>>.value(<_i2.Contenido>[]),
      ) as _i4.Future<List<_i2.Contenido>>);

  @override
  _i4.Future<List<_i5.Categoria>> getCategorias() => (super.noSuchMethod(
        Invocation.method(
          #getCategorias,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Categoria>>.value(<_i5.Categoria>[]),
      ) as _i4.Future<List<_i5.Categoria>>);

  @override
  _i4.Future<void> clearCache({_i2.CategoriaContenido? categoria}) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
          {#categoria: categoria},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
